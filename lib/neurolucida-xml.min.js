(function(){var a,b,c;b=function(){function a(a,b){this.startPoint=a,this.endPoint=b,this.direction=[this.endPoint[0]-this.startPoint[0],this.endPoint[1]-this.startPoint[1],this.endPoint[2]-this.startPoint[2]]}return a.prototype.getLength=function(){var a,b,c;return a=Math.pow(this.endPoint[0]-this.startPoint[0],2),b=Math.pow(this.endPoint[1]-this.startPoint[1],2),c=Math.pow(this.endPoint[2]-this.startPoint[2],2),Math.sqrt(a+b+c)},a.prototype.getVolume=function(){var a,b,c;return a=Math.pow(this.startPoint[3]/2,2),b=Math.pow(this.endPoint[3]/2,2),c=this.startPoint[3]*this.endPoint[3]/4,Math.PI*this.getLength()/3*(a+b+c)},a.prototype.getSurface=function(){var a,b,c;return b=this.startPoint[3]/2,c=this.endPoint[3]/2,a=Math.sqrt(Math.pow(b-c,2)+Math.pow(this.getLength(),2)),(b+c)*a*Math.PI},a.prototype.getDiameter=function(){return(this.startPoint[3]+this.endPoint[3])/2},a.prototype.distanceToPoint=function(a){var b,c,d;return d=[a[0]-this.startPoint[0],a[1]-this.startPoint[1],a[2]-this.startPoint[2]],b=[this.direction[1]*d[2]-this.direction[2]*d[1],this.direction[2]*d[0]-this.direction[0]*d[2],this.direction[0]*d[1]-this.direction[1]*d[0]],b=Math.sqrt(Math.pow(b[0],2)+Math.pow(b[1],2)+Math.pow(b[2],2)),c=Math.sqrt(Math.pow(this.direction[0],2)+Math.pow(this.direction[1],2)+Math.pow(this.direction[2],2)),b/c},a}(),a=function(){function a(){this._dendrites=[]}return a.prototype.load=function(a){var b;if(!a)throw new Error("No XML found");if("undefined"==typeof DOMParser?(b=require("xmldom").DOMParser,this.xml=(new b).parseFromString(a,"text/xml")):(b=new DOMParser,this.xml=b.parseFromString(a,"text/xml")),this.xml)return this.loadTree(),!0;throw new Error("Incorrect XML: "+a)},a.prototype.loadTree=function(){var a,b,c,d,e;for(d=this.xml.getElementsByTagName("tree"),e=[],b=0,c=d.length;c>b;b++)switch(a=d[b],a.getAttribute("type")){case"Axon":e.push(this.loadAxon(a));break;case"Dendrite":e.push(this.loadDendrite(a));break;default:e.push(void 0)}return e},a.prototype.loadDendrite=function(a){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;for(d={spines:[],length:0,total_spines:0,surface:0,volume:0,diameter:0,segments:0,group:"",file:"",title:""},o=a.children,f=k=0,m=o.length;m>k;f=++k)switch(c=o[f],c.nodeName){case"point":if(a.childElementCount-1>f){for(g=c;g&&(g=g.nextElementSibling,"point"!==g.nodeName););g&&(h=new b(this._getCoords(c),this._getCoords(g)),d.segments+=1,d.length+=h.getLength(),d.volume+=h.getVolume(),d.surface+=h.getSurface(),d.diameter+=h.getDiameter())}}for(d.diameter/=d.segments,p=a.children("spine"),l=0,n=p.length;n>l;l++)i=p[l],j=this._getCoordinates($(i).prev("point")),e=this._getCoordinates($(i).children("point").first()),i=new b(j,e),d.spines.push({length:i.getLength()}),d.total_spines++;return this._dendrites.push(d)},a.prototype.loadAxon=function(){},a.prototype.getDendrites=function(){return this._dendrites},a.prototype._getCoords=function(a){return[parseFloat(a.getAttribute("x")),parseFloat(a.getAttribute("y")),parseFloat(a.getAttribute("z")),parseFloat(a.getAttribute("d"))]},a}(),c="undefined"!=typeof exports&&null!==exports?exports:window,c.NeurolucidaXML=a}).call(this);